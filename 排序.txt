
自己的算法很差，记忆最深的就是冒泡排序。因为他比较简单，像我这种脑袋瓜，也只能学一下冒泡了。
今天偶然发现了一个博客，它里边介绍了各种排序，所以我就把这些排序的中心思想抓取过来了。详情可以去
他的博客里查看（Blog@codingXiaxw's blog）
先介绍一下排序有哪些及排序的划分。
按照排序的效率分有以下10种:

1.简单排序:冒泡排序、(直接)选择排序、(直接)插入排序。
2.高效排序:快速排序、堆排序、希尔排序。
3.基于分治递归思想的:归并排序。
4.线性排序:计数排序、桶排序、基数排序。
按照排序的方式又可分为:

1.插入排序:直接插入排序、希尔排序。
2.选择排序:直接选择排序、堆排序。
3.交换排序:冒泡排序、快速排序。
4.线性排序:计数排序、基数排序、桶排序;其中基数排序又叫桶排序;
5.递归排序:归并排序。

1.简单排序之冒泡排序

1.1冒泡排序实现思想

冒泡排序是最简单的排序之一了，其大体思想就是通过与相邻元素的比较和交换来把大的数交换到最后面(从小到大排序)。这个过程类似于水泡向上升一样，因此而得名。

举个栗子，对5,3,8,6,4这个无序序列进行冒泡排序。第一次冒泡:从前向后冒泡，5和3比较，5大所以将5和3交换，序列变成3，5，8，6，4;同理5和8比较，5比8小所以不交换;然后8和6比较，8大所以将8和6交换，序列变成3，5，6，8，4;然后8和4比较，进行8和4的交换，这样一次冒泡就完了，结果是将最大的数字8换到了最后面。对剩下的序列依次进行第二次冒泡、…、第n次冒泡就会得到一个有序序列。冒泡排序的时间复杂度为O(n^2)。

2.简单排序之选择排序
2.1选择排序实现思路

选择排序的思想其实和冒泡排序有点类似，都是在一次排序后把最大的元素放到最右边。但是过程不同，冒泡排序是通过相邻的比较和交换。而选择排序是通过对整体的选择。

举个栗子，对5,3,8,6,4这个无序序列进行简单选择排序。第一次选择排序:首先要循环遍历该数组，选择整体中5以外的最小数来和5交换，遍历该数组时发现3是最小的数字，
那么就会拿3和5交换，一次遍历和排序后就变成了3,5,8,6,4，实现了将最小的数字放在最前面。对剩下的序列依次进行第二次选择和交换、…、第n次选择和交换，最终就会
得到一个有序序列。其实选择排序可以看成冒泡排序的优化，因为其目的相同，只是选择排序只有在确定了最小数的前提下才进行交换，大大减少了交换的次数。选择排序的时间复杂度为O(n^2)。

3.简单排序之插入排序

3.1插入排序实现思路

插入排序不是通过交换位置而是通过比较找到合适的位置插入元素来达到排序的目的的。
相信大家都有过打扑克牌的经历，特别是牌数较大的。在分牌时可能要整理自己的牌，
牌多的时候怎么整理呢？就是拿到一张牌，找到一个合适的位置插入。
这个原理其实和插入排序是一样的。（我觉得这个比喻非常恰当！浅显易懂）

4.高效排序之快速排序

4.1快速排序实现思路

快速排序一听名字就觉得很高端，在实际应用当中快速排序确实也是表现最好的排序算法。
快速排序虽然高端，但其实其思想是来自冒泡排序，冒泡排序是通过相邻元素的比较和交换
把最小的冒泡到最顶端，而快速排序是同时比较和交换小数和大数，这样一来不仅把小数冒
泡到上面同时也把大数沉到下面。

总结快速排序的思想：冒泡+二分+递归分治，慢慢体会吧。

5.高效排序之堆排序

5.1堆排序实现思路

堆排序是借助堆来实现的选择排序，思想同简单的选择排序，以下以大顶堆为例。注意：如果想升序排序就使用大顶堆，
反之使用小顶堆。原因是堆顶元素需要交换到序列尾部。

6.高效排序之希尔排序

6.1希尔排序实现思路

希尔排序是插入排序的一种高效率的实现，也叫缩小增量排序。简单的插入排序中，如果待排序列是正序时，时间复杂度是O(n)，如果序列是基本有序的，使用直接插入排序效率就非常高。

希尔排序就利用了这个特点。基本思想是：先将整个待排记录序列分割成为若干子序列分别进行直接插入排序，待整个序列中的记录基本有序时再对全体记录进行一次直接插入排序。

7.基于分治递归思想的归并排序

7.1归并排序实现思路

归并排序是另一种不同的排序方法，因为归并排序使用了递归分治的思想，所以理解起来比较容易。其基本思想是，先递归划分子问题，然后合并结果。
把待排序列看成由两个有序的子序列，然后合并两个子序列;然后把子序列看成两个有序的子子序列，然后合并这两个子子序列;然后…倒着来看，其实就
是先两两合并，然后四四合并，最终形成一个有序序列。空间复杂度为O(n)，时间复杂度为O(nlogn)。

8.线性排序之计数排序

8.1计数排序实现思路

前面基于比较的排序的时间复杂度下限是O(nlogn)，但接下来要谈的计数排序的时间复杂度却只有O(n)。确实也有线性时间复杂度的排序，只不过有前提条件，就是待排序的数要满足一定的范围的整数，而且计数排序需要比较多的辅助空间。

其基本思想是：用待排序的数作为计数数组的下标，统计每个数字的个数，然后依次输出即可得到有序序列。

9.线性排序之桶排序

9.1桶排序实现思路

设有一组长度为N的待排关键字序列K[1….n]。首先将这个序列划分成M个的子区间(桶) 。然后基于某种映射函数 ，
将待排序列的关键字k映射到第i个桶中(即桶数组B的下标 i) ，那么该关键字k就作为B[i]中的元素(每个桶B[i]都
是一组大小为N/M的序列)。接着对每个桶B[i]中的所有元素进行比较排序(可以使用快排)。然后依次枚举输出B[0]….B[M]
中的全部内容即是一个有序序列。bindex=f(key) 其中，bindex 为桶数组B的下标(即第bindex个桶), k为待排序列的关
键字。桶排序之所以能够高效，其关键在于这个映射函数，它必须做到：如果关键字k1<k2，那么f(k1)<=f(k2)。也就是
说B(i)中的最小数据都要大于B(i-1)中最大数据。很显然，映射函数的确定与数据本身的特点有很大的关系。

10.线性排序之基数排序

10.1基数排序实现思路

基数排序又是一种和前面排序方式不同的排序方式，基数排序不需要进行记录关键字之间的比较。
基数排序是一种借助多关键字排序思想对单逻辑关键字进行排序的方法。所谓的多关键字排序就是
有多个优先级不同的关键字。比如说成绩的排序，如果两个人总分相同，则语文高的排在前面，
语文成绩也相同则数学高的排在前面…如果对数字进行排序，那么个位、十位、百位就是不同优先级的关键字，
如果要进行升序排序，那么个位、十位、百位优先级一次增加。基数排序是通过多次的收分配和收集来实现的，
关键字优先级低的先进行分配和收集。


以上就是十种排序方法的中心思想了。算法这种东西最重要的就是思想，你要学会是理解它，好好解析，吃透它。虽然我懂这个理，可是我还是很排斥算法。。。。嘿嘿（没交上？）